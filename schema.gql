# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserEntity {
  id: String!
  name: String!
  email: String!
  role: String!
}

type PageDataDto {
  count: Float!
  limit: Float!
  offset: Float!
}

type ListUserOutput {
  page: UserEntityConnection!
  pageData: PageDataDto
}

type UserEntityConnection {
  edges: [UserEntityEdge!]
  pageInfo: UserEntityPageInfo
}

type UserEntityEdge {
  cursor: String
  node: UserEntity
}

type UserEntityPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type AuthLoginOutput {
  """Generated access_token of the user"""
  accessToken: String!

  """The data of user"""
  user: UserEntity!
}

type FileEntity {
  id: String!
  url: String!
  userId: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CreateSignedUrlOutput {
  """Url of file"""
  uploadURL: String!

  """Filename of file"""
  key: String!
}

type Query {
  UserList(args: ConnectionArgs!, filter: ListUserInput!): ListUserOutput!
  UserItem(id: String!): UserEntity!
  AuthProfile: UserEntity!
  FileSignedUrl(input: CreateSignedUrlInput!): CreateSignedUrlOutput!
}

input ConnectionArgs {
  """Paginate before opaque cursor"""
  before: String

  """Paginate after opaque cursor"""
  after: String

  """Paginate first"""
  first: Float

  """Paginate last"""
  last: Float
}

input ListUserInput {
  """Email of user"""
  email: String

  """Name of user"""
  name: String
}

input CreateSignedUrlInput {
  contentType: String!
  filename: String!
}

type Mutation {
  createUser(input: CreateUserInput!): UserEntity!
  UserUpdate(id: String!, input: UpdateUserInput!): UserEntity!
  UserRemove(id: String!): UserEntity!
  AuthRegister(input: AuthRegisterInput!): UserEntity!
  AuthLogin(input: AuthLoginInput!): AuthLoginOutput!
  AuthUpdateProfile(input: AuthUpdateInput!): UserEntity!
  FileUpload(file: Upload!): FileEntity!
  FileCreate(input: CreateFileInput!): FileEntity!
}

input CreateUserInput {
  """name of the user"""
  name: String!

  """email of the user"""
  email: String!

  """role of the user"""
  role: String!

  """password of the user"""
  password: String!
}

input UpdateUserInput {
  """name of the user"""
  name: String

  """email of the user"""
  email: String

  """role of the user"""
  role: String

  """password of the user"""
  password: String
}

input AuthRegisterInput {
  """name of the user"""
  name: String!

  """email of the user"""
  email: String!

  """role of the user"""
  role: String!

  """password of the user"""
  password: String!
}

input AuthLoginInput {
  """email of the user"""
  email: String!

  """password of the user"""
  password: String!
}

input AuthUpdateInput {
  """name of the user"""
  name: String

  """password name of the user"""
  password: String

  """current password of the user"""
  currentPassword: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateFileInput {
  url: String!
}